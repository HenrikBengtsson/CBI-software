help([[
DMTCP: Distributed MultiThreaded CheckPointing
]])

local name = myModuleName()
local version = myModuleVersion()
whatis("Version: " .. version)
whatis("Keywords: hpc, checkpointing")
whatis("URL: http://dmtcp.sourceforge.net/, https://docs.nersc.gov/development/checkpoint-restart/dmtcp/ (documentation), https://dmtcp.sourceforge.io/FAQ.html (FAQ), https://github.com/dmtcp/dmtcp/releases (changelog), https://github.com/dmtcp/dmtcp (source code)")
whatis([[
Description: DMTCP is a tool to transparently checkpoint the state of multiple simultaneous applications, including multi-threaded and distributed applications. It operates directly on the user binary executable, without any Linux kernel modules or other kernel modifications. Among the applications supported by DMTCP are MPI (various implementations), OpenMP, MATLAB, Python, Perl, R, and many programming languages and shell scripting languages. DMTCP also supports GNU screen sessions, including vim/cscope and emacs.
Examples: `dmtcp_launch --help` and `man dmtcp`. To run R and create check points every 10 minutes, call `dmtcp_launch --interval=600 R`. If that process gets terminated, it can then be relaunched using `./dmtcp_restart_script.sh`.
]])

local root = os.getenv("SOFTWARE_ROOT_CBI")
local home = pathJoin(root, name .. "-" .. version)

-- Runtime
prepend_path("PATH", pathJoin(home, "bin"))
prepend_path("LD_LIBRARY_PATH", pathJoin(home, "lib"))
prepend_path("MANPATH_PATH", pathJoin(home, "share", "man"))

-- Build time
--prepend_path("CPATH", pathJoin(home, "include"))
--prepend_path("LDFLAGS", "-L" .. pathJoin(home, "lib"), " ")
--prepend_path("PKG_CONFIG_PATH", pathJoin(home, "lib", "pkgconfig"))
