help([[
libevent: An Event Notification Library
]])

local name = myModuleName()
local version = myModuleVersion()
whatis("Version: " .. version)
whatis("Keywords: library, development")
whatis("URL: https://libevent.org/, https://github.com/libevent/libevent/releases (changelog), https://github.com/libevent/libevent (source code)")
whatis([[
Description: The libevent API provides a mechanism to execute a callback function when a specific event occurs on a file descriptor or after a timeout has been reached. Furthermore, libevent also support callbacks due to signals or regular timeouts.
Examples: `event_rpcgen.py`.
]])

local root = os.getenv("SOFTWARE_ROOT_CBI")
local home = pathJoin(root, name .. "-" .. version)

prepend_path("PATH", pathJoin(home, "bin"))
prepend_path("LD_LIBRARY_PATH", pathJoin(home, "lib"))
prepend_path("CPATH", pathJoin(home, "include"))
prepend_path("LIBRARY_PATH", pathJoin(home, "lib"))
prepend_path("LD_RUN_PATH", pathJoin(home, "lib"))
