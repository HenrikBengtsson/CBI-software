help([[
libevent: An Event Notification Library
]])

local name = myModuleName()
local version = myModuleVersion()
whatis("Version: " .. version)
whatis("Keywords: library, development")
whatis("URL: http://libevent.org/, https://github.com/libevent/libevent")
whatis("Description: The libevent API provides a mechanism to execute a callback function when a specific event occurs on a file descriptor or after a timeout has been reached. Furthermore, libevent also support callbacks due to signals or regular timeouts. Example: `event_rpcgen.py`.")

local root = os.getenv("CBI_APPS_ROOT")
local path = pathJoin(root, "manual")

local home = pathJoin(path, name .. "-" .. version)
prepend_path("PATH", pathJoin(home, "bin"))
prepend_path("LD_LIBRARY_PATH", pathJoin(home, "lib"))
prepend_path("CPATH", pathJoin(home, "include"))
prepend_path("LIBRARY_PATH", pathJoin(home, "lib"))
prepend_path("LD_RUN_PATH", pathJoin(home, "lib"))
