help([[
Miniconda: A Free Minimal Installer for Conda
]])

local warning = "Use at your own peril! Software tools installed via Conda are known to cause conflicts with other software on the system, including core software provided by the operating system as well as other software from the CBI stack. For example, do not install R packages running R from the CBI stack, while conda is activated."

local name = myModuleName()
local version = myModuleVersion()
version = string.gsub(version, "^[.]", "") -- for hidden modules
whatis("Version: " .. version)
whatis("Keywords: files, utility")
whatis("URL: https://docs.conda.io/en/latest/, https://docs.conda.io/en/latest/miniconda.html (docs), https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links (releases), https://github.com/conda/conda/blob/master/CHANGELOG.md (changelog), https://github.com/conda/conda (source code)")
whatis([[
Description: Miniconda is a free minimal installer for conda. It is a small, bootstrap version of Anaconda that includes only conda, Python, the packages they depend on, and a small number of other useful packages, including pip, zlib and a few others.
Examples: `conda --version`, `conda create --name=myenv`, `conda env list`, `conda activate myenv`, `conda info`, and `conda deactive`.
Warning: For now, this module only work in Bash. Also, do _not_ do `conda init`. If you do by mistake, please undo by `conda init --reverse`.
]])


local root = os.getenv("SOFTWARE_ROOT_CBI")
local home = pathJoin(root, name .. "-" .. version)

prepend_path("PATH", pathJoin(home, "bin"))
prepend_path("MANPATH", pathJoin(home, "share", "man"))
prepend_path("PKG_CONFIG_PATH", pathJoin(home, "lib", "pkgconfig"))

if mode() == "load" then
  -- ASSERT: Make sure there is no other active conda environment
  if os.getenv("CONDA_EXE") then
    LmodError("Cannot load " .. name .. " module, because another conda installation is already enabled (detected environment variable CONDA_EXE='" .. os.getenv("CONDA_EXE") .. "'). Have you installed conda on your own? If so, run 'conda config --set auto_activate_base false' and then log out and log back in again.  If that is not sufficient, please run 'conda init --reverse' and log out and back in again.")
  end

  pushenv("CONDA_EXE", pathJoin(home, "bin", "conda"))
  pushenv("CONDA_PYTHON_EXE", pathJoin(home, "bin", "python"))
  pushenv("_CE_M", "")
  pushenv("_CE_CONDA", "")
elseif mode() == "unload" then
  pushenv("CONDA_EXE", false)
  pushenv("CONDA_PYTHON_EXE", false)
  pushenv("_CE_M", false)
  pushenv("_CE_CONDA", false)
end
